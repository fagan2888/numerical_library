clear all
clc

disp('test script for QIP')

status_in = [0     1     1     0     0     0     1     0     1     0     0     1];

A = [  0    -4     7     4    -2
      -4    -1     4    -2     2
       0     1     0     4     0
       0    -1     0    -4     0
       0     1    -1     2    -9
      -6     1     0    -1     3
       2     0    -7    -1     0
       1     0     0     0     0
       0     1     0     0     0
       0     0     1     0     0
       0     0     0     1     0
       0     0     0     0     1 ];

b = [  5
       2
       0
      -1
     -10
      -3
      -5
       0
       0
       0
       0
       0 ];

% A = [  0    -4     7     4    -2
%       -4    -1     4    -2     2
%       -8    -2     8    -4     4];
% 
% b = [  5
%        2
%        4];
% 
% A = [  0    -4     7     4    -2];
% 
% b = [  5];

g = [ 10
       1
      -2
     -10
       5 ];

% nonconvex hessian
H = [  2     5    -8     8     1
       5     4     7     4    -2
      -8     7    10    -5    -2
       8     4    -5     6     2
       1    -2    -2     2     4 ];
   
% convex hessian
% H = [10.8043   -0.2157   -2.9892    5.6147    0.8719;
%      -0.2157    9.8229    2.1428    2.8024   -1.0100;
%      -2.9892    2.1428   14.1572   -4.5533   -2.7047;
%       5.6147    2.8024   -4.5533    9.1400    1.1615;
%       0.8719   -1.0100   -2.7047    1.1615    4.3076];
  
% % independent constraint
% g = [0;0];
% H = eye(2);
% A = [1 1;
%      0 -1];
% b = [2;-3];
% x0 = [0;3];

% standard subspace minimizer
x0 = [0.3;0;0.8;0;0];
  
[xs,ys,rs,fs] = quad_solve(A,b,g,H,[-100;20;300;7;-20]);


% %%% problem with dead point %%%
% g = [0;
%      0];
% H = [ 0   -0.5;
%      -0.5  0];
% A = [-1  0;
%       0 -1;
%       1  0;
%       0  1];
% b = [-1;
%      -1;
%       0;
%       0];
%   
% % dead point
% x0 = [0;0];
%  
% quad_solve(A,b,g,H,[1;1])





